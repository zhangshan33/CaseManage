# #! /usr/bin/env python
# # -*- coding: utf-8 -*-
# # __author__ = "张开"
# # Date: 2019/10/21
# # import HTMLTestRunner2
# # import unittest
# # from io import BytesIO
# #
# #
# # class TestCase(unittest.TestCase):
# #
# #     def runTest(self):
# #         self.assertTrue(0)
# #
# # if __name__ == '__main__':
# #     suite = unittest.makeSuite(TestCase)
# #     f = BytesIO()
# #     # f = open(f1, 'wb')
# #     print(1111111111, f)
# #     res = HTMLTestRunner2.HTMLTestRunner(
# #         stream=f,
# #     ).run(suite)
# #     print(1111111, f.getvalue())
#
#
#
#
# # from urllib.parse import  unquote
# #
# #
# # print(unquote('%5B%7B%22LAY_TABLE_INDEX%22%3A0%2C%22attribute%22%3A%22123%22%2C%22name%22%3A%22123%22%2C%22value%22%3A%22123%22%2C%22defaultValue%22%3A%22123%22%7D%5D'))
# # print(unquote('%7B%22id%22%3A%22%22%2C%22funcType%22%3A%22c%22%2C%22funcNo%22%3A%22dsa%22%2C%22funcName%22%3A%22dsa%22%2C%22url%22%3A%22dsa%22%2C%22version%22%3A%22%22%2C%22_mode%22%3A%22add%22%7D'))
# #
#
# # import requests
# # print(requests.get(url='https://www.baidu.com').json())
#
#
# # Generated by Selenium IDE
# # import pytest
# # import time
# # import json
# # from selenium import webdriver
# # from selenium.webdriver.common.by import By
# # from selenium.webdriver.common.action_chains import ActionChains
# # from selenium.webdriver.support import expected_conditions
# # from selenium.webdriver.support.wait import WebDriverWait
# # from selenium.webdriver.common.keys import Keys
# #
# #
# # class TestCase2():
# #     def setup_method(self, method):
# #         self.driver = webdriver.Chrome()
# #         self.vars = {}
# #
# #     def teardown_method(self, method):
# #         self.driver.quit()
# #
# #     def wait_for_window(self, timeout=2):
# #         time.sleep(round(timeout / 1000))
# #         wh_now = self.driver.window_handles
# #         wh_then = self.vars["window_handles"]
# #         if len(wh_now) > len(wh_then):
# #             return set(wh_now).difference(set(wh_then)).pop()
# #
# #     def test_case2(self):
# #         self.driver.get("https://cn.bing.com/")
# #         self.driver.set_window_size(1294, 728)
#
# #         self.driver.find_element(By.ID, "sb_form_q").click()
# #         self.driver.find_element(By.CSS_SELECTOR, "#sa_5003 .sa_tm_text").click()
# #         self.vars["window_handles"] = self.driver.window_handles
# #         self.driver.find_element(By.CSS_SELECTOR, ".null").click()
# #         self.vars["win2144"] = self.wait_for_window(2000)
# #         self.driver.switch_to.window(self.vars["win2144"])
# #         self.driver.find_element(By.CSS_SELECTOR, ".attribute:nth-child(14) .pre").click()
# #
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# from pyecharts.charts.pie import Pie
# from subprocess import _args_from_interpreter_flags
#
#
# attr = ['已发布-未使用', '已废弃/重新开发', '已付钱-未发布', '修正后被使用', '发布后即可使用']
# value = [47, 19, 29, 3, 2]
#
# pie = Pie('美国军方对联邦项目的统计研究')
# pie.add(
#     '',
#     attr,
#     value
# )
# pie.render('./a.html')
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# from appium import webdriver
#
# desired_caps = {
#     "platformName": "android",
#     "platformVersion": "4.4.2",
#     "deviceName": "127.0.0.1:52001",
#     "appPackage": "com.jd.app.reader",
#     "appActivity": "com.jingdong.app.reader.logo.JdLogoActivity"
# }
#
# driver = webdriver.Remote('http://127.0.0.1:4700/wd/hub', desired_caps)
# print(driver.get_window_size())  # {'width': 720, 'height': 1280}
# print(driver.get_window_size()['width'])  # 720
# print(driver.get_window_size()['height'])  # 1280